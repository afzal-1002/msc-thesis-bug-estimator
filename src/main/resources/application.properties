spring.application.name=issue-tracking-service

server.port = 8081

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/bug_service?serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root


spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false


spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20

spring.main.allow-bean-definition-overriding=true

##google.api.key=AIzaSyDLCEHH-sae7hJdr5Bv0ql1vMH4X9ttnwE
## Google API Call
##AIzaSyDLCEHH-sae7hJdr5Bv0ql1vMH4X9ttnwE
#
### your existing key
##googles.api.key=AIzaSyDLCEHH-sae7hJdr5Bv0ql1vMH4X9ttnwE
### base URL for Gemini
##gemini.api.base-url=https://gemini.googleapis.com/v1
#
#gemini.api.base-url=https://generativelanguage.googleapis.com
#gemini.api.key=AIzaSyDLCEHH-sae7hJdr5Bv0ql1vMH4X9ttnwE
#gemini.api.model=gemini-2.0-flash
#
#
## DeepSeek AI settings
##sk-71cd758e27c8475191b150218b746005
#deepseek.api.base-url=https://api.deepseek.com
#deepseek.api.key=sk-71cd758e27c8475191b150218b746005
#
#
#jira.base-url=https://bugresolution.atlassian.net
#jira.username=01108500@pw.edu.pl
#jira.api-token=ATATT3xFfGF0AbqX3XAKoCz-detHxlJs3RMe-zapZETh0rKfG2kJtj4dz2LB1GnA6d8OWX46ddnzYVluE-2zbq91p2B4ywePNNBjvIY5ARryu9Gny6Wy2qHpsnkCn9Ke2_yqQR2j1nd8VP2CXuv50NI7YbNI1QGHT_H4V4iJu8a25yq694xaP5o=3DF35505
#jira.api-version=3
#
## Jira API Configuration
#jira.api.base-url=https://bugresolution.atlassian.net/rest/api/3
#jira.api.username=01108500@pw.edu.pl
#jira.api.password=ATATT3xFfGF0ZkgX5vmUoxAgGn9pF2n9hCznuG7xZYqgkEzIMI1gw0SP2lZSu-buiHL6utkqbU7CNkx2J1X6Kw0Q9Kr0NDCRymygkC5V5CwpgfgQhbfh29p9bZk0pobN2pK8CXSXCSW9NIbr9dufFVV-0zI8UWdVMuZqsDAQWRV11CuLl1bYBs=7E9E6A06
#

# RestTemplate timeout configuration
spring.mvc.async.request-timeout=30000
rest.connection.timeout=5000
rest.read.timeout=30000

#spring.jackson.property-naming-strategy = SNAKE_CASE
#spring.jackson.property-naming-strategy=CAMEL_CASE


# Jackson configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC
spring.jackson.deserialization.adjust-dates-to-context-time-zone=true

# Hibernate/JPA configuration
spring.jpa.properties.hibernate.jdbc.time_zone=UTC


spring.autoconfigure.exclude=\
  org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration



## Spring Security:
# keep the default user name
spring.security.user.name=user

# supply a plain-text password  the `{noop}` prefix tells Spring Security
# dont apply any encoder here
spring.security.user.password={noop}password

# (optional) which roles this user has
spring.security.user.roles=USER




# Encryption Configuration
# Encryption Configuration
# Encryption Configuration (DO NOT USE THESE IN PRODUCTION - GENERATE YOUR OWN)
app.encryption.secret=6z&9E#p2Xs$qLm8!Kb5RnDfGvYjWt7P*
app.encryption.salt=3Qe!9cL$8dF#2gH%1jM4nB7vK5yT6wA&


#jira.base-url=https://bugresolution.atlassian.net
#jira.username=01108500@pw.edu.pl
#jira.token=ATATT3xFfGF0eACusIB3O6Fy3oB5Ui981vroVQbnR_2rmCvLGvOpa_Tj7QjunCgaraIbrN1vwWIJqrpDqlPNM21hbSsrCEUppuK2rG64lPY5hMbabD1jKeUQcAGZXZh7sTAlqfWyNGB9bITDflgcLsxciawBFloKJgrz8KnoGfNIwe8mpFmUF_Y=925C3DB0
#jira.project-key=BUG


#Okay, so I totally understand. So right now I want to change some kind of implementation in my project.
# So what exactly I want as a user, I log in and user will have option to add project and update project.
# So when user is going to add the project, so user is asked to provide base URL, and Jira user name,
# and Jira token, and project key, and application version. So mostly it's gonna be three application version,
# but still we can ask user. So whenever user provide these things, what exactly I want,
# I want to implement the idea calling the Jira services, using these credentials, fetch the project,
# and add this project in our database, in our API database, where this when the project is saved,
# so it will be automatically assigned to this user. Can have multiple user, but for right now it is assigned
# to this user. On other hand, user can see all the project assigned to him.
# So please help me to implement this idea, and also I want to implement this that if it is a case that user token
# expired, or base URL did not work, or for some reason project key is changed,
# I want to give user error that please update your project credentials, and based on that I want to provide
# anything which is not working, let's say Jira token, or project key, or user name.



#curl "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent" \
#  -H 'Content-Type: application/json' \
#  -H 'X-goog-api-key: GEMINI_API_KEY' \
#  -X POST \
#  -d '{
#"contents": [
#{
#"parts": [
#{
#"text": "Explain how AI works in a few words"
#}
#]
#}
#]
#}'